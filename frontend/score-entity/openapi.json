---
openapi: 3.0.3
info:
  title: score-entity API
  version: 1.0.0-SNAPSHOT
paths:
  /file:
    post:
      tags:
      - File Resource
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultipartFormDataInput"
      responses:
        "200":
          description: OK
  /groups:
    get:
      tags:
      - Group Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
    post:
      tags:
      - Group Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
  /groups/{id}:
    put:
      tags:
      - Group Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupUpdateRequest"
      responses:
        "200":
          description: OK
    delete:
      tags:
      - Group Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /items:
    get:
      tags:
      - Item Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
    post:
      tags:
      - Item Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
  /items/{id}:
    put:
      tags:
      - Item Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemUpdateRequest"
      responses:
        "200":
          description: OK
    delete:
      tags:
      - Item Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /scoreboard-stream:
    get:
      tags:
      - Scoreboard Ressource
      responses:
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/PublisherString"
  /scores:
    post:
      tags:
      - Score Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScoreUpdateRequest"
      responses:
        "200":
          description: OK
components:
  schemas:
    FileItem:
      type: object
      properties:
        inMemory:
          type: boolean
        file:
          $ref: "#/components/schemas/Path"
        fileSize:
          format: int64
          type: integer
        inputStream:
          format: binary
          type: string
    FileStore:
      type: object
      properties:
        readOnly:
          type: boolean
        totalSpace:
          format: int64
          type: integer
        usableSpace:
          format: int64
          type: integer
        unallocatedSpace:
          format: int64
          type: integer
        blockSize:
          format: int64
          type: integer
    FileSystem:
      type: object
      properties:
        open:
          type: boolean
        readOnly:
          type: boolean
        separator:
          type: string
        rootDirectories:
          type: array
          items:
            $ref: "#/components/schemas/Path"
        fileStores:
          type: array
          items:
            $ref: "#/components/schemas/FileStore"
        userPrincipalLookupService:
          $ref: "#/components/schemas/UserPrincipalLookupService"
    FormValue:
      type: object
      properties:
        value:
          type: string
        charset:
          type: string
        fileItem:
          $ref: "#/components/schemas/FileItem"
        fileName:
          type: string
        headers:
          $ref: "#/components/schemas/MultivaluedMapStringString"
    Group:
      required:
      - name
      type: object
      properties:
        id:
          format: int64
          type: integer
          nullable: true
        name:
          type: string
        image:
          type: object
          allOf:
          - $ref: "#/components/schemas/Image"
          nullable: true
        totalScore:
          format: int32
          type: integer
    GroupUpdateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        image:
          type: object
          allOf:
          - $ref: "#/components/schemas/Image"
          nullable: true
    Image:
      required:
      - publicId
      - imageUrl
      type: object
      properties:
        id:
          format: int64
          type: integer
        publicId:
          type: string
        imageUrl:
          type: string
    Item:
      required:
      - name
      type: object
      properties:
        id:
          format: int64
          type: integer
          nullable: true
        name:
          type: string
        image:
          type: object
          allOf:
          - $ref: "#/components/schemas/Image"
          nullable: true
        scoreValue:
          format: int32
          type: integer
    ItemUpdateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        image:
          type: object
          allOf:
          - $ref: "#/components/schemas/Image"
          nullable: true
        scoreValue:
          format: int32
          type: integer
    MultipartFormDataInput:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/FormValue"
    MultivaluedMapStringString:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    Path:
      type: object
      properties:
        fileSystem:
          $ref: "#/components/schemas/FileSystem"
        absolute:
          type: boolean
        root:
          $ref: "#/components/schemas/Path"
        fileName:
          $ref: "#/components/schemas/Path"
        parent:
          $ref: "#/components/schemas/Path"
        nameCount:
          format: int32
          type: integer
    PublisherString:
      type: object
    ScoreUpdateRequest:
      type: object
      properties:
        groupId:
          format: int64
          type: integer
        points:
          format: int32
          type: integer
    UserPrincipalLookupService:
      type: object
